{"version":3,"sources":["components/Cell.js","components/Board.js","utils/analytics.js","components/Header.js","components/Game.js","App.js","index.js"],"names":["Cell","props","className","onMouseUp","event","handleCellClick","onContextMenu","e","preventDefault","tabIndex","type","src","alt","width","height","drawCell","Board","labels","map","label","i","element","j","data","row","col","showingSolution","correct","user","style","visibility","won","opacity","transition","onClick","newGame","isServer","window","Header","rules","check","showingRules","showingCheck","isCorrect","category","action","ANALYTICS_INITIALIZED","ReactGA","checkCorrect","showContent","setTimeout","confirm","console","log","onBlur","placeDoctor","board","possibleDoctors","randomCell","Math","floor","random","length","doctor","splice","possibleTardis","filter","cell","randomTardis","tardis","placeTardis","remove","push","setSafeZone","toString","createGame","boardState","initialState","initalBoard","setInitialState","createBoard","count","createLabels","getGame","App","game","state","initialize","this","bind","showing","newState","undefined","setState","forEach","countDoctors","x","y","target","focus","button","win","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yWAkCeA,MA/Bf,SAAeC,GACb,OACE,qBACEC,UAAU,OACVC,UAAW,SAACC,GAAD,OAASH,EAAMI,gBAAgBD,IAC1CE,cAAe,SAACC,GAAD,OAAKA,EAAEC,kBACtBC,SAAU,EAJZ,SAWF,SAAkBC,GAChB,GAAa,WAATA,EACF,OAAO,qBAAKC,IAAI,oBAAoBC,IAAI,YAAYC,MAAM,KAAKC,OAAO,KAAKL,SAAU,IAChF,GAAa,WAATC,EACT,OAAO,qBAAKC,IAAI,oBAAoBC,IAAI,SAASC,MAAM,KAAKC,OAAO,KAAKL,SAAU,IAC7E,GAAa,UAATC,EACT,MAAO,GACF,GAAa,MAATA,EACT,OAAO,qBAAKC,IAAI,mBAAmBC,IAAI,QAAQC,MAAM,KAAKC,OAAO,KAAKL,SAAU,IAb/EM,CAASd,EAAMS,SCkDPM,MAtDf,SAAgBf,GACd,OACE,sBAAKC,UAAU,QAAf,WA4BmBe,EA3BJhB,EAAMgB,OA4BdA,EAAOC,KAAI,SAACC,EAAOC,GACxB,OAAU,IAANA,EACK,qBAAKlB,UAAU,SAAf,SAAsCiB,EAAMD,KAAI,SAACG,EAASC,GAC/D,OAAO,qBAAKpB,UAAU,aAAf,SAAkDmB,GAAlD,kBAA4CC,QADlB,UAI9B,qBAAKpB,UAAU,SAAf,SAAsCiB,EAAMD,KAAI,SAACG,EAASC,GAC/D,OAAO,qBAAKpB,UAAU,aAAf,SAAkDmB,GAAlD,kBAA4CC,QADlB,cAjCnC,qBAAKpB,UAAU,OAAf,UAceqB,EAbFtB,EAAMsB,KAcdA,EAAKL,KAAI,SAACM,EAAKJ,GACpB,OAAO,qBAAKlB,UAAU,MAAf,SAAuCsB,EAAIN,KAAI,SAACO,EAAKH,GAC1D,OAAO,qBAAKpB,UAAU,MAAf,SACL,cAAC,EAAD,CACEG,gBAAiB,SAACD,GAAWH,EAAMI,gBAAgBe,EAAGE,EAAGlB,IACzDM,KAAOT,EAAMyB,gBAAkBD,EAAIE,QAAUF,EAAIG,QAH9C,cAAiCN,QADnC,cAAiCF,UAbxC,sBAAKlB,UAAU,MAAM2B,MACjB,CAACC,WAAY7B,EAAM8B,IAAM,UAAY,SACpCC,QAAS/B,EAAM8B,IAAM,EAAI,EACzBE,WAAYhC,EAAM8B,IAAM,qCAAuC,IAHpE,UAKE,oDACA,wBAAQrB,KAAK,SAASR,UAAU,MAAMgC,QAAS,kBAAIjC,EAAMkC,WAAzD,4BAKN,IAAmBZ,EAYEN,G,iBCnCjBmB,EAA6B,qBAAXC,OCgFTC,MA7Ef,SAAiBrC,GACf,IAAIsC,EAAOC,EA6BX,OA5BIvC,EAAMwC,eACRF,EAAS,sBAAKrC,UAAU,QAAf,UACP,qBAAKS,IAAI,oBAAoBC,IAAI,YAAYC,MAAM,KAAKC,OAAO,OAC/D,qBAAKH,IAAI,oBAAoBC,IAAI,SAASC,MAAM,KAAKC,OAAO,OAC5D,sGACA,+BACE,sGACA,oIAEA,+HAEA,4MAEA,kIAEA,mLAEA,qGAEF,0DAIAb,EAAMyC,eACUF,EAAlBvC,EAAM0C,UAAoB,qBAAKzC,UAAU,QAAf,oCACA,qBAAKA,UAAU,QAAf,2CAI1B,mCACE,qDACA,gCACE,+BACE,oBAAIA,UAAU,MAAMgC,QAAS,WDnBb,IAAC9B,ICoBJ,CACTwC,SAAU,cACVC,OAAQ,iBACR1B,MAAO,SDtBfiB,GAAYC,OAAOS,uBACrBC,IAAQ3C,MAAMA,GCuBNH,EAAM+C,eACN/C,EAAMgD,YAAY,gBAAgB,GAClCC,YAAW,kBAAIjD,EAAMgD,YAAY,gBAAgB,KAAQ,OAR3D,mBAUA,oBACE/C,UAAU,MACVgC,QAAS,kBAAIjC,EAAMgD,YAAY,oBAFjC,sBAIA,oBACE/C,UAAU,MACVgC,QAAS,WAAKiB,QAAQ,8CAAgDlD,EAAMkC,UAAYiB,QAAQC,IAAI,WAFtG,iBAKA,oBACEnD,UAAU,MACVO,SAAU,EACVyB,QAAS,kBAAIjC,EAAMgD,YAAY,iBAC/BK,OAAQ,kBAAIrD,EAAMgD,YAAY,gBAAgB,IAJhD,sBAODV,EACAC,SCgKT,SAASe,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,gBACvBC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAgBK,QACxDC,EAASN,EAAgBO,OAAON,EAAY,GAAG,GAEnD,GA1CF,SAAqBK,EAAQP,GAC3B,IAAIS,EAAiB,CACnB,CAACF,EAAO,GAAKA,EAAO,GAAK,GACzB,CAACA,EAAO,GAAKA,EAAO,GAAK,GACzB,CAAEA,EAAO,GAAK,EAAIA,EAAO,IACzB,CAAEA,EAAO,GAAK,EAAIA,EAAO,KAQ3B,IALAE,EAAiBA,EAAeC,QAAO,SAAAC,GACrC,OAAQA,EAAK,IAAM,GAAKA,EAAK,GAAKX,EAAMM,QAChCK,EAAK,IAAM,GAAKA,EAAK,GAAKX,EAAMM,UAGnCG,EAAeH,OAAS,GAAG,CAChC,IAAIM,EAAeT,KAAKC,MAAMD,KAAKE,SAAWI,EAAeH,QACzDO,EAASJ,EAAeD,OAAOI,EAAc,GAAG,GACpD,GAA4C,MAAxCZ,EAAMa,EAAO,IAAIA,EAAO,IAAI1C,QAG9B,OAFA6B,EAAMa,EAAO,IAAIA,EAAO,IAAI1C,QAAU,SACtC6B,EAAMa,EAAO,IAAIA,EAAO,IAAIzC,KAAO,UAC5B,EAIX,OAAO,EAmBF0C,CAAYP,EAAQP,GAAzB,CAIAA,EAAMO,EAAO,IAAIA,EAAO,IAAIpC,QAAU,SAKtC,IAHA,IAAI4C,EAtBN,SAAqBR,GAGnB,IAFA,IAAIQ,EAAS,GAEJnD,EAAI2C,EAAO,GAAK,EAAG3C,GAAK2C,EAAO,GAAK,EAAG3C,IAC9C,IAAK,IAAIE,EAAIyC,EAAO,GAAK,EAAGzC,GAAKyC,EAAO,GAAK,EAAGzC,IAC9CiD,EAAOC,KAAK,CAACpD,EAAEE,IAInB,OAAOiD,EAaME,CAAYV,GAGhBzC,EAAI,EAAGA,EAAIiD,EAAOT,OAAQxC,IACjC,IAAK,IAAIF,EAAI,EAAGA,EAAIqC,EAAgBK,OAAQ1C,IACtCqC,EAAgBrC,GAAGsD,aAAeH,EAAOjD,GAAGoD,YAC9CjB,EAAgBO,OAAO5C,EAAG,IAkClC,SAASuD,IACP,IAAMC,EA7BR,WAME,IALA,IAAMC,EAhFR,WAEE,IADA,IAAIC,EAAc,GACT1D,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACtB0D,EAAYN,KAAK,IACjB,IAAK,IAAIlD,EAAE,EAAGA,EAAE,EAAGA,IACjBwD,EAAY1D,GAAGoD,KAAK,CAAC5C,KAAM,QAASD,QAAS,MAKjD,IADA,IAAM8B,EAAkB,GACfrC,EAAE,EAAGA,EAAE,EAAGA,IACjB,IAAK,IAAIE,EAAE,EAAGA,EAAE,EAAGA,IACjBmC,EAAgBe,KAAK,CAACpD,EAAGE,IAI7B,MAAO,CAACkC,MAAOsB,EAAarB,mBAgEPsB,GAEjBvB,EAAQqB,EAAarB,MACrBC,EAAkBoB,EAAapB,gBAE5BA,EAAgBK,OAAUH,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAC/DN,EAAYsB,GAGd,OAAOrB,EAmBYwB,GAGnB,MAAO,CAACJ,aAAY3D,OAnBtB,SAAsBuC,GAEpB,IADA,IAAIvC,EAAS,CAAC,GAAI,IACTG,EAAE,EAAGA,EAAEoC,EAAMM,OAAQ1C,IAAK,CACjCH,EAAO,GAAGuD,KAAKhB,EAAMpC,GAAG8C,QAAO,SAAAC,GAAI,MAAqB,WAAjBA,EAAKxC,WAAsBmC,QAElE,IADA,IAAImB,EAAQ,EACH3D,EAAE,EAAGA,EAAEkC,EAAMM,OAAQxC,IACA,WAAxBkC,EAAMlC,GAAGF,GAAGO,SACdsD,IAGJhE,EAAO,GAAGuD,KAAKS,GAEjB,OAAOhE,EAKQiE,CAAaN,IAKvB,SAASO,IACb,OAAOR,I,ICjHKS,E,kDAjKb,aAAe,IAAD,sBACZ,eACA,IAAMC,EAAOF,IAFD,OAGZ,EAAKG,MAAQ,CACX5D,iBAAiB,EACjBe,cAAc,EACdC,cAAc,EACdC,WAAW,EACXZ,KAAK,EACL6C,WAAYS,EAAKT,WACjB3D,OAAQoE,EAAKpE,QAVH,E,gEHLVmB,IACFC,OAAOS,uBAAwB,EAC/BC,IAAQwC,WALW,mB,+BG2BnB,OACE,sBAAKrF,UAAU,MAAf,UACGsF,KAAKF,MAAMvD,KAAO,qBAAK7B,UAAU,YAClC,cAAC,EAAD,CACE+C,YAAauC,KAAKvC,YAAYwC,KAAKD,MACnC/C,aAAc+C,KAAKF,MAAM7C,aACzBC,aAAc8C,KAAKF,MAAM5C,aACzBM,aAAcwC,KAAKxC,aAAayC,KAAKD,MACrC7C,UAAW6C,KAAKF,MAAM3C,UACtBR,QAASqD,KAAKrD,QAAQsD,KAAKD,QAG7B,iCACE,cAAC,EAAD,CACEjE,KAAMiE,KAAKF,MAAMV,WACjB3D,OAAQuE,KAAKF,MAAMrE,OACnBS,gBAAiB8D,KAAKF,MAAM5D,gBAC5BrB,gBAAiBmF,KAAKnF,gBAAgBoF,KAAKD,MAC3CzD,IAAKyD,KAAKF,MAAMvD,IAChBI,QAASqD,KAAKrD,QAAQsD,KAAKD,QAE7B,sBAAKtF,UAAU,cAAf,UACE,+DACA,+EACA,8FAIJ,mCACE,uDACA,4E,kCAMIwF,EAASC,QACFC,IAAbD,EACFH,KAAKK,SAAL,eACGH,GAAWF,KAAKF,MAAMI,KAGzBF,KAAKK,SAAL,eACGH,EAAUC,M,qCAMf,IAAMpE,EAAOiE,KAAKF,MAAMV,WACpBjC,GAAY,EAiBhB,OAfApB,EAAKuE,SAAQ,SAAAtE,GACXA,EAAIsE,SAAQ,SAAAzE,IAEa,WAApBA,EAAQM,SAAyC,MAAjBN,EAAQO,MACpB,MAApBP,EAAQM,SAAoC,WAAjBN,EAAQO,QAEpCe,GAAY,SAKlB6C,KAAKK,SAAS,CACZlD,UAAWA,IAGNA,I,4BAIP,IAAMpB,EAAOiE,KAAKF,MAAMV,WAExB,SAASmB,EAAaxE,EAAMb,GAC1B,IAAIuE,EAAQ,EAQZ,OAPA1D,EAAKuE,SAAQ,SAAAtE,GACXA,EAAIsE,SAAQ,SAAAzE,GACY,WAAlBA,EAAQX,IACVuE,UAICA,EAGLc,EAAaxE,EAAM,UAAYwE,EAAaxE,EAAM,YAChDiE,KAAKxC,gBACPwC,KAAKK,SAAS,CACZ9D,KAAK,M,sCAMGiE,EAAGC,EAAG7F,GACpBA,EAAMI,iBACNJ,EAAM8F,OAAOC,QACb,IAAI5E,EAAOiE,KAAKF,MAAMV,WAED,IAAjBxE,EAAMgG,OACgB,UAApB7E,EAAKyE,GAAGC,GAAGrE,KACbL,EAAKyE,GAAGC,GAAGrE,KAAO,IACW,MAApBL,EAAKyE,GAAGC,GAAGrE,KACpBL,EAAKyE,GAAGC,GAAGrE,KAAO,SACW,WAApBL,EAAKyE,GAAGC,GAAGrE,OACpBL,EAAKyE,GAAGC,GAAGrE,KAAO,SAEM,IAAjBxB,EAAMgG,SACfhG,EAAMI,iBACkB,UAApBe,EAAKyE,GAAGC,GAAGrE,KACbL,EAAKyE,GAAGC,GAAGrE,KAAO,SACW,MAApBL,EAAKyE,GAAGC,GAAGrE,KACpBL,EAAKyE,GAAGC,GAAGrE,KAAO,QACW,WAApBL,EAAKyE,GAAGC,GAAGrE,OACpBL,EAAKyE,GAAGC,GAAGrE,KAAO,MAItB4D,KAAKK,UAAS,WACZ,MAAO,CACLjB,WAAYrD,KAEbiE,KAAKa,O,gCAIR,IAAMlE,EAAUgD,IAEhBK,KAAKK,UAAS,WACZ,MAAO,CACLnE,iBAAiB,EACjBe,cAAc,EACdC,cAAc,EACdC,WAAW,EACXZ,KAAK,EACL6C,WAAYzC,EAAQyC,WACpB3D,OAAQkB,EAAQlB,e,GA5JNqF,IAAMC,W,OCHxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b85c057e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Cell (props) {\n  return (\n    <div\n      className=\"cell\"\n      onMouseUp={(event)=>props.handleCellClick(event)}\n      onContextMenu={(e)=>e.preventDefault()}\n      tabIndex={0}>\n\n      {drawCell(props.type)}\n    </div>\n\n  );\n\n  function drawCell(type) {\n    if (type === \"doctor\") {\n      return <img src=\"images/doctor.svg\" alt=\"TheDoctor\" width=\"35\" height=\"35\" tabIndex={0}/>\n    } else if (type === \"tardis\") {\n      return <img src=\"images/tardis.svg\" alt=\"Tardis\" width=\"37\" height=\"37\" tabIndex={0}/>\n    } else if (type === \"empty\") {\n      return \"\"\n    } else if (type === \"x\") {\n      return <img src=\"images/cross.svg\" alt=\"cross\" width=\"30\" height=\"30\" tabIndex={0}/>\n    }\n  }\n}\n\nCell.propTypes = {\n  handleCellClick: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n}\n\nexport default Cell;","import React from 'react';\nimport '../styles/board.css';\nimport PropTypes from 'prop-types';\n\nimport Cell from './Cell.js';\n\n\nfunction Board (props) {\n  return (\n    <div className=\"board\">\n      {bulidLabels(props.labels)}\n      <div className=\"grid\">\n        {bulidGrid(props.data)}\n      </div>\n      <div className=\"win\" style={\n          {visibility: props.won ? 'visible' : 'hidden',\n           opacity: props.won ? 1 : 0,\n           transition: props.won ? 'visibility 0s, opacity 0.2s linear' : ''}\n      }>\n        <p>You won! Brilliant!</p>\n        <button type=\"button\" className=\"btn\" onClick={()=>props.newGame()}>New Game</button>\n      </div>\n    </div>\n  );\n\n  function bulidGrid(data) {\n    return data.map((row, i) => {\n      return <div className=\"row\" key={`row_${i}`}>{row.map((col, j) => {\n        return <div className=\"col\" key={`col_${j}`}>\n          <Cell\n            handleCellClick={(event) => {props.handleCellClick(i, j, event)}}\n            type={(props.showingSolution ? col.correct : col.user)}/>\n        </div>\n      })}</div>\n    });\n  }\n\n  function bulidLabels(labels) {\n    return labels.map((label, i) => {\n      if (i === 0) {\n        return <div className=\"labelH\" key=\"labelH\">{label.map((element, j) => {\n          return <div className=\"labElement\" key={`element_${j}`}>{element}</div>\n        })}</div>\n      }\n      return <div className=\"labelV\" key=\"labelV\">{label.map((element, j) => {\n        return <div className=\"labElement\" key={`element_${j}`}>{element}</div>\n      })}</div>\n    });\n  }\n\n}\n\nBoard.propTypes = {\n  labels: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)).isRequired,\n  showingSolution: PropTypes.bool.isRequired,\n  won: PropTypes.bool.isRequired,\n  handleCellClick: PropTypes.func.isRequired,\n  newGame: PropTypes.func.isRequired,\n}\n\nexport default Board;","import ReactGA from 'react-ga'\n\nconst isServer = typeof window !== 'undefined'\nconst GA_TRACKING_ID = 'G-QBFPM9C92Q'\n\nexport const initAnalytics = () => {\n  if (isServer) {\n    window.ANALYTICS_INITIALIZED = true\n    ReactGA.initialize(GA_TRACKING_ID)\n  }\n}\n\nexport const trackPage = (url) => {\n  if (isServer && window.ANALYTICS_INITIALIZED) {\n    const pageUrl =\n      url || `${window.location.pathname}${window.location.search}`\n    ReactGA.set({ page: pageUrl })\n    ReactGA.pageview(pageUrl)\n  }\n}\n\nexport const trackEvent = (event) => {\n  if (isServer && window.ANALYTICS_INITIALIZED) {\n    ReactGA.event(event)\n  }\n}\n","import React from 'react';\nimport '../styles/header.css';\nimport PropTypes from 'prop-types';\nimport { trackEvent } from '../utils/analytics'\n\nfunction Header (props) {\n  let rules, check;\n  if (props.showingRules) {\n    rules = (<div className=\"rules\">\n      <img src=\"images/doctor.svg\" alt=\"TheDoctor\" width=\"45\" height=\"45\" />\n      <img src=\"images/tardis.svg\" alt=\"Tardis\" width=\"50\" height=\"50\" />\n      <p>Your job is to place Doctors next to their Tardis. Keep in mind that:</p>\n      <ul>\n        <li>Each Doctor has exactly one Tardis (so the number of both is equal).</li>\n        <li>The number of Doctors in a row or a column is indicated by the respective numbers\n          around the edge.</li>\n        <li>The Doctor can only stand horizontally or vertically adjacent to his Tardis\n          (not diagonally).</li>\n        <li>It's ok for Tardis to appear next to each other, but Doctor seeing himself might cause\n            a time paradox - never place them vertically, horizontally, or diagonally adjacent.</li>\n        <li>The Tardis can be found next to more than one Doctor, but it still connects to\n          only one of them.</li>\n        <li>To place Doctor right-click or double-click on an empty square. If you're sure that\n          a square cannot contain Doctor, click once to mark it with X.</li>\n        <li>You can check your progress or see the solution in the menu bar.</li>\n      </ul>\n      <p>Good luck &amp; Allons-y!</p>\n    </div>);\n  }\n\n  if (props.showingCheck) {\n    props.isCorrect ? check = <div className=\"check\">Everything is correct!</div> :\n                      check = <div className=\"check\">Oh, there's something wrong!</div>\n  }\n\n  return (\n    <header>\n      <h1>Time Paradox Puzzle</h1>\n      <nav>\n        <ul>\n          <li className=\"nav\" onClick={()=>{\n            trackEvent({\n              category: 'Nav clicked',\n              action: 'Click to check',\n              label: 'check'\n            })\n            props.checkCorrect();\n            props.showContent(\"showingCheck\", true);\n            setTimeout(()=>props.showContent(\"showingCheck\", false), 1500);\n            }}>Check</li>\n          <li\n            className=\"nav\"\n            onClick={()=>props.showContent(\"showingSolution\")}\n          >Solution</li>\n          <li\n            className=\"nav\"\n            onClick={()=>{confirm(\"Are you sure you want to start a new game?\") ? props.newGame() : console.log('cancel')}\n            }\n          >New</li>\n          <li\n            className=\"nav\"\n            tabIndex={0}\n            onClick={()=>props.showContent(\"showingRules\")}\n            onBlur={()=>props.showContent(\"showingRules\", false)}\n          >Rules</li>\n        </ul>\n        {rules}\n        {check}\n      </nav>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  showingRules: PropTypes.bool.isRequired,\n  showingCheck: PropTypes.bool.isRequired,\n  isCorrect: PropTypes.bool.isRequired,\n  checkCorrect: PropTypes.func.isRequired,\n  showContent: PropTypes.func.isRequired,\n  newGame: PropTypes.func.isRequired,\n}\n\nexport default Header;","// const examples = [\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}]\n//                 ],\n//     labels: [\n//               [3, 0, 3, 1, 2, 1, 0, 4],\n//               [2, 0, 4, 0, 3, 1, 2, 2]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}]\n//     ],\n//     labels: [\n//               [2, 0, 3, 1, 0, 2, 2, 2],\n//               [3, 1, 0, 2, 0, 3, 0, 3]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}]\n//     ],\n//     labels: [\n//               [1, 1, 2, 2, 1, 1, 2, 2],\n//               [3, 0, 1, 1, 1, 2, 1, 3]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"tardis\", correct: \"tardis\"}]\n//     ],\n//     labels: [\n//               [2, 2, 1, 2, 1, 1, 2, 1],\n//               [2, 0, 3, 0, 3, 0, 3, 1]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}]\n//     ],\n//     labels: [\n//               [1, 2, 2, 0, 3, 1, 2, 1],\n//               [2, 2, 1, 2, 1, 1, 2, 1]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}]\n//     ],\n//     labels: [\n//               [2, 0, 2, 2, 1, 1, 2, 2],\n//               [3, 1, 2, 1, 3, 0, 1, 1]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}]\n//     ],\n//     labels: [\n//               [1, 1, 2, 1, 2, 1, 2, 2],\n//               [2, 1, 0, 2, 1, 2, 0, 4]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}]\n//     ],\n//     labels: [\n//               [1, 3, 1, 2, 1, 1, 1, 2],\n//               [2, 1, 1, 2, 2, 0, 2, 2]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}]\n//     ],\n//     labels: [\n//               [2, 2, 0, 1, 2, 2, 0, 3],\n//               [3, 1, 3, 0, 1, 1, 2, 1]\n//             ],\n//   },\n//   {\n//     boardState: [\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"doctor\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"x\"}],\n//                   [{user: \"empty\", correct: \"x\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}, {user: \"empty\", correct: \"x\"}, {user: \"tardis\", correct: \"tardis\"}, {user: \"empty\", correct: \"doctor\"}]\n//     ],\n//     labels: [\n//               [1, 2, 2, 1, 2, 1, 0, 3],\n//               [1, 3, 0, 1, 1, 3, 0, 3]\n//             ],\n//   },\n// ]\n\n\n// export function getGame() {\n//   return examples[Math.floor(Math.random()*10)];\n// }\n\n\n//GENERATE NEW GAME//\nfunction setInitialState() {\n  let initalBoard = [];\n  for (let i=0; i<8; i++) {\n    initalBoard.push([])\n    for (let j=0; j<8; j++) {\n      initalBoard[i].push({user: \"empty\", correct: \"x\"});\n    }\n  }\n\n  const possibleDoctors = [];\n  for (let i=0; i<8; i++) {\n    for (let j=0; j<8; j++) {\n      possibleDoctors.push([i, j]);\n    }\n  }\n\n  return {board: initalBoard, possibleDoctors};\n}\n\nfunction placeTardis(doctor, board) {\n  let possibleTardis = [\n    [doctor[0], (doctor[1] - 1)],\n    [doctor[0], (doctor[1] + 1)],\n    [(doctor[0] - 1), doctor[1]],\n    [(doctor[0] + 1), doctor[1]],\n  ]\n\n  possibleTardis = possibleTardis.filter(cell => {\n    return (cell[0] >= 0 && cell[0] < board.length) &&\n           (cell[1] >= 0 && cell[1] < board.length)\n  });\n\n  while (possibleTardis.length > 0) {\n    let randomTardis = Math.floor(Math.random() * possibleTardis.length);\n    let tardis = possibleTardis.splice(randomTardis, 1)[0];\n    if (board[tardis[0]][tardis[1]].correct === \"x\") {\n      board[tardis[0]][tardis[1]].correct = \"tardis\";\n      board[tardis[0]][tardis[1]].user = \"tardis\";\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction setSafeZone(doctor) {\n  let remove = [];\n\n  for (let i = doctor[0] - 1; i <= doctor[0] + 1; i++) {\n    for (let j = doctor[1] - 1; j <= doctor[1] + 1; j++) {\n      remove.push([i,j])\n    }\n  }\n\n  return remove;\n}\n\nfunction placeDoctor({board, possibleDoctors}) {\n  let randomCell = Math.floor(Math.random() * possibleDoctors.length);\n  let doctor = possibleDoctors.splice(randomCell, 1)[0];\n\n  if (!placeTardis(doctor, board)) {\n    return;\n  };\n\n  board[doctor[0]][doctor[1]].correct = \"doctor\";\n\n  let remove = setSafeZone(doctor);\n\n  // Updates possibleDoctors\n  for (var j = 0; j < remove.length; j++) {\n    for (var i = 0; i < possibleDoctors.length; i++) {\n      if (possibleDoctors[i].toString() === remove[j].toString()) {\n        possibleDoctors.splice(i, 1);\n      }\n    }\n  }\n}\n\nfunction createBoard() {\n  const initialState = setInitialState();\n\n  let board = initialState.board;\n  let possibleDoctors = initialState.possibleDoctors;\n\n  while (possibleDoctors.length > (Math.floor(Math.random() * 5) + 1)) {\n    placeDoctor(initialState);\n  }\n\n  return board;\n}\n\nfunction createLabels(board) {\n  let labels = [[], []];\n  for (let i=0; i<board.length; i++) {\n    labels[1].push(board[i].filter(cell => cell.correct === 'doctor').length);\n    let count = 0;\n    for (let j=0; j<board.length; j++) {\n      if (board[j][i].correct === 'doctor') {\n        count++;\n      }\n    }\n    labels[0].push(count);\n  }\n  return labels;\n}\n\nfunction createGame() {\n  const boardState = createBoard();\n  const labels = createLabels(boardState);\n\n  return {boardState, labels};\n}\n\nexport function getGame() {\n   return createGame();\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./styles/footer.css\";\nimport \"./styles/main.css\";\n\nimport Board from \"./components/Board.js\";\nimport Header from \"./components/Header.js\";\nimport { getGame } from \"./components/Game.js\";\nimport { initAnalytics } from \"./utils/analytics\"\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    const game = getGame();\n    this.state = {\n      showingSolution: false,\n      showingRules: false,\n      showingCheck: false,\n      isCorrect: true,\n      won: false,\n      boardState: game.boardState,\n      labels: game.labels\n    };\n  }\n\n  componentDidMount() {\n    initAnalytics()\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.won && <div className=\"overlay\" />}\n        <Header\n          showContent={this.showContent.bind(this)}\n          showingRules={this.state.showingRules}\n          showingCheck={this.state.showingCheck}\n          checkCorrect={this.checkCorrect.bind(this)}\n          isCorrect={this.state.isCorrect}\n          newGame={this.newGame.bind(this)}\n        />\n\n        <main>\n          <Board\n            data={this.state.boardState}\n            labels={this.state.labels}\n            showingSolution={this.state.showingSolution}\n            handleCellClick={this.handleCellClick.bind(this)}\n            won={this.state.won}\n            newGame={this.newGame.bind(this)}\n          />\n          <div className=\"description\">\n            <p>Every Tardis needs its Doctor.</p>\n            <p>Help them connect in the time-spice continuum.</p>\n            <p>Avoid the time paradox - Doctors cannot see each other!</p>\n          </div>\n        </main>\n\n        <footer>\n          <p>&copy; 2018 Dorota Siwek</p>\n          <p>Created for the purpose of training</p>\n        </footer>\n      </div>\n    );\n  }\n\n  showContent(showing, newState) {\n    if (newState === undefined) {\n      this.setState({\n        [showing]: !this.state[showing]\n      });\n    } else {\n      this.setState({\n        [showing]: newState\n      });\n    }\n  }\n\n  checkCorrect() {\n    const data = this.state.boardState;\n    let isCorrect = true;\n\n    data.forEach(row => {\n      row.forEach(element => {\n        if (\n          (element.correct === \"doctor\" && element.user === \"x\") ||\n          (element.correct === \"x\" && element.user === \"doctor\")\n        ) {\n          isCorrect = false;\n        }\n      });\n    });\n\n    this.setState({\n      isCorrect: isCorrect\n    });\n\n    return isCorrect;\n  }\n\n  win() {\n    const data = this.state.boardState;\n\n    function countDoctors(data, type) {\n      let count = 0;\n      data.forEach(row => {\n        row.forEach(element => {\n          if (element[type] === \"doctor\") {\n            count++;\n          }\n        });\n      });\n      return count;\n    }\n\n    if (countDoctors(data, \"user\") === countDoctors(data, \"correct\")) {\n      if (this.checkCorrect()) {\n        this.setState({\n          won: true\n        });\n      }\n    }\n  }\n\n  handleCellClick(x, y, event) {\n    event.preventDefault();\n    event.target.focus();\n    let data = this.state.boardState;\n\n    if (event.button === 0) {\n      if (data[x][y].user === \"empty\") {\n        data[x][y].user = \"x\";\n      } else if (data[x][y].user === \"x\") {\n        data[x][y].user = \"doctor\";\n      } else if (data[x][y].user === \"doctor\") {\n        data[x][y].user = \"empty\";\n      }\n    } else if (event.button === 2) {\n      event.preventDefault();\n      if (data[x][y].user === \"empty\") {\n        data[x][y].user = \"doctor\";\n      } else if (data[x][y].user === \"x\") {\n        data[x][y].user = \"empty\";\n      } else if (data[x][y].user === \"doctor\") {\n        data[x][y].user = \"x\";\n      }\n    }\n\n    this.setState(() => {\n      return {\n        boardState: data\n      };\n    }, this.win);\n  }\n\n  newGame() {\n    const newGame = getGame();\n\n    this.setState(() => {\n      return {\n        showingSolution: false,\n        showingRules: false,\n        showingCheck: false,\n        isCorrect: true,\n        won: false,\n        boardState: newGame.boardState,\n        labels: newGame.labels\n      };\n    });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}